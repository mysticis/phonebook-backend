{"version":3,"sources":["phonebook/PhoneBookNotification.js","services/phonebook.js","phonebook/App.js","index.js"],"names":["phoneBookNotification","message","errorStatus","className","baseUrl","newRecord","axios","post","then","response","data","id","updatedRecord","put","get","delete","res","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","searchTerm","setSearchTerm","notification","setNotification","setError","useEffect","personService","records","PhoneBookNotification","onChange","event","target","value","addPerson","preventDefault","newPersonObject","name","number","checkName","filter","person","toLowerCase","includes","console","log","length","concat","setTimeout","window","confirm","personToUpdate","map","pers","catch","err","handleNewName","handleNewNumber","item","key","onClick","find","removePerson","style","marginLeft","list","Filter","PersonForm","onSubmit","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.304323f7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst phoneBookNotification = ({ message, errorStatus }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className={errorStatus ? \"error\" : \"notification\"}>{message}</div>\r\n  );\r\n};\r\nexport default phoneBookNotification;\r\n","import axios from \"axios\";\r\n//const baseUrl = \"http://localhost:8000/api/persons\";\r\nconst baseUrl = \"https://fathomless-sands-78807.herokuapp.com/api/persons\";\r\nconst createRecord = newRecord => {\r\n  const request = axios.post(baseUrl, newRecord);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst updateRecord = (id, updatedRecord) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, updatedRecord);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst getRecords = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst deleteResource = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then(res => res.data);\r\n};\r\n\r\nexport default { createRecord, updateRecord, getRecords, deleteResource };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PhoneBookNotification from \"./PhoneBookNotification\";\r\nimport personService from \"../services/phonebook\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [notification, setNotification] = useState(null);\r\n  const [errorStatus, setError] = useState(false);\r\n  useEffect(() => {\r\n    personService.getRecords().then(records => setPersons(records));\r\n  }, []);\r\n\r\n  const handleNewNumber = event => setNewNumber(event.target.value);\r\n  const handleNewName = event => setNewName(event.target.value);\r\n\r\n  //write the new addperson functionality here\r\n  const addPerson = event => {\r\n    event.preventDefault();\r\n    const newPersonObject = {\r\n      name: newName,\r\n      number: newNumber\r\n    };\r\n    const checkName = persons.filter(person =>\r\n      person.name.toLowerCase().includes(newName.toLowerCase())\r\n    );\r\n    console.log(checkName);\r\n    //checkname = [{name: joe, number: 44444, id: 5}]\r\n    if (checkName.length === 0) {\r\n      personService.createRecord(newPersonObject).then(response => {\r\n        setPersons(persons.concat(response));\r\n        setError(false);\r\n        setNotification(`${response.name} was added!`);\r\n        setTimeout(() => {\r\n          setNotification(null);\r\n        }, 4000);\r\n        setNewName(\"\");\r\n        setNewNumber(\"\");\r\n      });\r\n    } else if (\r\n      window.confirm(\r\n        `${checkName[0].name} already exists, replace the old phone number with a new one?`\r\n      )\r\n    ) {\r\n      const personToUpdate = {\r\n        ...checkName[0],\r\n        number: newNumber\r\n      };\r\n      personService\r\n        .updateRecord(checkName[0].id, personToUpdate)\r\n        .then(response => {\r\n          setPersons(\r\n            persons.map(pers => (pers.id === checkName[0].id ? response : pers))\r\n          );\r\n          setNotification(`${checkName[0].name}'s details was updated`);\r\n          setTimeout(() => {\r\n            setNotification(null);\r\n          }, 4000);\r\n          setNewName(\"\");\r\n          setNewNumber(\"\");\r\n        })\r\n        .catch(err => {\r\n          setNotification(\r\n            `${checkName[0].name} has already been deleted from server!`\r\n          );\r\n          setTimeout(() => {\r\n            setNotification(null);\r\n          }, 4000);\r\n          setError(true);\r\n          setNewName(\"\");\r\n          setNewNumber(\"\");\r\n        });\r\n    } else {\r\n      setNewName(\"\");\r\n      setNewNumber(\"\");\r\n    }\r\n  };\r\n\r\n  const handleSearchTerm = event => setSearchTerm(event.target.value);\r\n  const removePerson = (id, name) => {\r\n    const person = persons.find(pers => pers.id === id);\r\n    if (window.confirm(`Delete ${name}?`)) {\r\n      personService.deleteResource(person.id);\r\n      setPersons(persons.filter(pers => pers.id !== id));\r\n      setError(false);\r\n      setNotification(`${name} was deleted successfully!`);\r\n      setTimeout(() => {\r\n        setNotification(null);\r\n      }, 4000);\r\n    } else {\r\n      setPersons(persons);\r\n    }\r\n  };\r\n\r\n  const list = searchTerm => {\r\n    return persons\r\n      .filter(item =>\r\n        item.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n      )\r\n      .map(pers => (\r\n        <li key={pers.name}>\r\n          {pers.name} {`: ${pers.number}`}\r\n          <button\r\n            onClick={() => removePerson(pers.id, pers.name)}\r\n            style={{ marginLeft: `1rem` }}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ));\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>PhoneBook</h2>\r\n\r\n      <div>Showing results for:</div>\r\n      <PhoneBookNotification message={notification} errorStatus={errorStatus} />\r\n      <Filter searchTerm={searchTerm} onChange={handleSearchTerm} />\r\n      <br />\r\n      <br />\r\n      <PersonForm\r\n        addPerson={addPerson}\r\n        newName={newName}\r\n        newNumber={newNumber}\r\n        handleNewName={handleNewName}\r\n        handleNewNumber={handleNewNumber}\r\n      />\r\n      <h3>Records</h3>\r\n      {list(searchTerm)}\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n\r\nconst Filter = ({ searchTerm, onChange }) => {\r\n  return <input value={searchTerm} onChange={onChange} />;\r\n};\r\n\r\nconst PersonForm = ({\r\n  addPerson,\r\n  newName,\r\n  newNumber,\r\n  handleNewName,\r\n  handleNewNumber\r\n}) => {\r\n  return (\r\n    <form onSubmit={addPerson}>\r\n      <label>Name:</label>\r\n      <input value={newName} onChange={handleNewName} />\r\n      <br />\r\n      <br />\r\n      <label>Number:</label>\r\n      <input value={newNumber} onChange={handleNewNumber} /> <br />\r\n      <button type=\"submit\">Add</button>\r\n    </form>\r\n  );\r\n};\r\n\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./phonebook/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}